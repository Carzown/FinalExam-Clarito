# -*- coding: utf-8 -*-
"""Final Exam: Model Deployment in the Cloud_Clarito

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qZcK3Z1XNz-2zwI0_zPiyP_-A0SaGar4

<h1> Final Examination </h1>
Name: Clarito, Vincent Carson D. <br>
Course and Section: CPE019 CPE32S1 <br>
Instructor: Engr. Robin Valenzuela <br>
Date Performed: 12/12/24 <br>
Date Submitted: 12/12/24 <br>

<hr>
"""
import streamlit as st
import tensorflow as tf
import numpy as np
import cv2

# Load model
@st.cache_resource
def load_model():
    return tf.keras.models.load_model('cifar10_model.h5')

model = load_model()
class_labels = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']

# Prediction function
def predict(image):
    image = cv2.resize(image, (32, 32))
    input_arr = np.expand_dims(image, axis=0) / 255.0
    prediction = model.predict(input_arr)
    class_prediction = np.argmax(prediction)
    confidence = np.max(prediction)
    return class_labels[class_prediction], confidence

# Streamlit interface
st.title("CIFAR-10 Image Classification")
uploaded_file = st.file_uploader("Upload an image")

if uploaded_file is not None:
    # Convert file to an OpenCV image
    file_bytes = np.asarray(bytearray(uploaded_file.read()), dtype=np.uint8)
    image = cv2.imdecode(file_bytes, 1)
    st.image(image, channels="BGR")
    
    # Predict class and confidence
    class_name, confidence = predict(image)
    st.write(f"Prediction: {class_name} (Confidence: {confidence:.2f})")
